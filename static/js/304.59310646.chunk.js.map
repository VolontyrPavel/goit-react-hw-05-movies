{"version":3,"file":"static/js/304.59310646.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,sBAGf,C,yKCVYC,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACpC,OACE,iCACE,0BAAI,WAASD,MACb,uBAAIC,MAGT,EAEDF,EAAYG,SAAW,CACrBF,OAAQG,IAAAA,OACRF,QAASE,IAAAA,Q,cC2BX,EAlCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAYC,EAAAA,EAAAA,cAAW,iBAAC,gHAEAC,EAAAA,EAAAA,IAAmBJ,GAFnB,gBAElBK,EAFkB,EAElBA,QACRV,EAAWU,GAHe,gDAK1BN,EAAS,KAAMO,SALW,yBAO1BT,GAAa,GAPa,4EAS3B,CAACG,IAOJ,OALAO,EAAAA,EAAAA,YAAU,WACRV,GAAa,GACbK,GACD,GAAE,CAACA,KAGF,gCACGN,IAAa,SAACd,EAAA,EAAD,IACbgB,IAAS,uBAAG,mCAEZJ,GAAWA,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACxB,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7BmB,EADM,MAK7B,C,mMCpCKC,EAAU,mCACVC,EAAW,+BAEXC,EAAW,QACXC,EAAe,gBACfC,EAAQ,QACRC,EAAQ,SAIDC,EAAS,mCAAG,sGACAC,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OATJ,sBASI,oBACiBD,EADjB,4BAC4CE,IAF5C,uBACfM,EADe,EACfA,KADe,kBAIhBA,EAAKb,SAJW,2CAAH,qDAOTc,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPJ,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACPE,EADO,kBACeO,EADf,oBACgCV,EADhC,iBACgDW,EADhD,0BACsEP,EADtE,qBACwFF,IAFjF,uBACtBM,EADsB,EACtBA,KADsB,kBAIvBA,EAAKb,SAJkB,2CAAH,sDAOhBiB,EAAa,mCAAG,WAAOb,GAAP,yFACJQ,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACPI,EADO,YACEN,EADF,oBACgBC,EADhB,qBACoCE,IAFhC,uBACnBM,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObK,EAAe,mCAAG,WAAOd,GAAP,yFACNQ,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACPI,EADO,YACEN,GADF,OAzBZ,WAyBY,oBACuBC,EADvB,qBAC2CE,IAFrC,uBACrBM,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfd,EAAkB,mCAAG,WAAOK,GAAP,yFACTQ,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACPI,EADO,YACEN,GADF,OA/BT,WA+BS,oBAC0BC,EAD1B,qBAC8CE,IAFrC,uBACxBM,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,qD","sources":["components/Loader.jsx","components/ReviewsList.jsx","page/Reviews.jsx","service/getService.js"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};","import PropTypes from 'prop-types';\n\nexport const ReviewsList = ({ author, content }) => {\n  return (\n    <>\n      <h5>Author: {author}</h5>\n      <p>{content}</p>\n    </>\n  );\n};\n\nReviewsList.propType = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState, useCallback } from 'react';\nimport { getMoviesByRewiews } from '../service/getService';\nimport { ReviewsList } from '../components/ReviewsList';\nimport { Loader } from '../components/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const fetchData = useCallback(async () => {\n    try {\n      const { results } = await getMoviesByRewiews(movieId);\n      setReviews(results);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops... Somesing went wrong...</p>}\n      \n      {reviews && reviews.map(({ id, author, content }) => (\n      <ReviewsList key={id} author={author} content={content} />\n      ))}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '5710a8f06496583a27b9e808ee84dcbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY = '/trending/movie/day';\nconst LANGUAGE = 'en-US';\nconst SEARCH_QUERY = '/search/movie';\nconst ADULT = 'false';\nconst BY_ID = '/movie';\nconst CAST = '/credits'\nconst REVIEWS = '/reviews'\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_DAY}?api_key=${API_KEY}&page=1&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY}?query=${query}&api_key=${API_KEY}&page=${page}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesById = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByCast = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${CAST}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByRewiews = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${REVIEWS}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};"],"names":["Loader","height","width","radius","color","ariaLabel","ReviewsList","author","content","propType","PropTypes","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","fetchData","useCallback","getMoviesByRewiews","results","message","useEffect","map","id","API_KEY","BASE_URL","LANGUAGE","SEARCH_QUERY","ADULT","BY_ID","getMovies","axios","data","getMoviesByQuery","query","page","getMoviesById","getMoviesByCast"],"sourceRoot":""}