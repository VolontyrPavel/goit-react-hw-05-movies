{"version":3,"file":"static/js/311.d3d0784d.chunk.js","mappings":"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","sources":["components/Loader.jsx","components/MoviesList.jsx","components/MovieSearchForm.jsx","page/Movies.jsx","service/getService.js"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{from: location}}>\n          <li>{title}</li>\n        </Link>\n      ))}\n    </ul>\n  )\n}\n\nMoviesList.propType = {\n  movies: PropTypes.arrayOf(PropTypes.string),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const MovieSearchForm = ({\n  setSearchParams,\n}) => {\n  const [query, setQuery] = useState('');\n\n  const onHandleInput = e => {\n    setQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const onHundleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      return alert('Заповніть строку пошуку');\n    }\n    setSearchParams(query);\n  };\n\n  return (\n    <form onSubmit={onHundleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        onChange={onHandleInput}\n        value={query}\n      ></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nMovieSearchForm.propType = {\n  setSearchParams: PropTypes.object.isRequired,\n  searchValue: PropTypes.string,\n};\n\n","import { useEffect, useState, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { MovieSearchForm } from '../components/MovieSearchForm';\nimport { MoviesList } from '../components/MoviesList';\nimport { Loader } from '../components/Loader';\nimport { getMoviesByQuery } from '../service/getService';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchSearchData = useCallback(async searchParams => {\n    setIsLoading(true);\n    try {\n      const data = await getMoviesByQuery(searchParams);\n      setMovies(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchSearchData(searchParams);\n  }, [searchParams, fetchSearchData]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops... Somesing went wrong...</p>}\n      <MovieSearchForm setSearchParams={setSearchParams} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '5710a8f06496583a27b9e808ee84dcbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY = '/trending/movie/day';\nconst LANGUAGE = 'en-US';\nconst SEARCH_QUERY = '/search/movie';\nconst ADULT = 'false';\nconst BY_ID = '/movie';\nconst CAST = '/credits'\nconst REVIEWS = '/reviews'\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_DAY}?api_key=${API_KEY}&page=1&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY}?query=${query}&api_key=${API_KEY}&page=${page}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesById = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByCast = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${CAST}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByRewiews = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${REVIEWS}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};"],"names":["Loader","height","width","radius","color","ariaLabel","MoviesList","movies","location","useLocation","map","id","title","to","state","from","propType","PropTypes","MovieSearchForm","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","alert","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","trim","searchValue","useSearchParams","searchParams","setMovies","isLoading","setIsLoading","error","setError","fetchSearchData","useCallback","getMoviesByQuery","data","message","useEffect","length","API_KEY","BASE_URL","LANGUAGE","SEARCH_QUERY","ADULT","BY_ID","getMovies","axios","results","page","getMoviesById","getMoviesByCast","getMoviesByRewiews"],"sourceRoot":""}