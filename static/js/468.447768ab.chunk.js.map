{"version":3,"file":"static/js/468.447768ab.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,sBAGf,C,2GCTYC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,CAAeC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAAlD,UACE,wBAAKI,KADID,EADD,KAOjB,EAEDL,EAAWU,SAAW,CACpBT,OAAQU,IAAAA,QAAkBA,IAAAA,Q,0HCmB5B,UA/Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,GACD,GAAE,IAEH,IAAMA,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAGdR,EAAUQ,GAHI,gDAKdJ,EAAS,KAAMK,SALD,yBAOdP,GAAa,GAPC,4EAAH,qDAWf,OACE,gCACGD,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAG,oCACb,wBAAI,mBACHf,EAAOsB,OAAS,IAAK,SAAC,IAAD,CAAYtB,OAAQA,MAG/C,C,mMCjCKuB,EAAU,mCACVC,EAAW,+BAEXC,EAAW,QACXC,EAAe,gBACfC,EAAQ,QACRC,EAAQ,SAIDT,EAAS,mCAAG,sGACAU,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OATJ,sBASI,oBACiBD,EADjB,4BAC4CE,IAF5C,uBACfL,EADe,EACfA,KADe,kBAIhBA,EAAKU,SAJW,2CAAH,qDAOTC,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPJ,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPE,EADO,kBACeM,EADf,oBACgCT,EADhC,iBACgDU,EADhD,0BACsEN,EADtE,qBACwFF,IAFjF,uBACtBL,EADsB,EACtBA,KADsB,kBAIvBA,EAAKU,SAJkB,2CAAH,sDAOhBI,EAAa,mCAAG,WAAO9B,GAAP,yFACJyB,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPI,EADO,YACExB,EADF,oBACgBmB,EADhB,qBACoCE,IAFhC,uBACnBL,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObe,EAAe,mCAAG,WAAO/B,GAAP,yFACNyB,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPI,EADO,YACExB,GADF,OAzBZ,WAyBY,oBACuBmB,EADvB,qBAC2CE,IAFrC,uBACrBL,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfgB,EAAkB,mCAAG,WAAOhC,GAAP,yFACTyB,EAAAA,EAAAA,IAAA,UAClBL,GADkB,OACPI,EADO,YACExB,GADF,OA/BT,WA+BS,oBAC0BmB,EAD1B,qBAC8CE,IAFrC,uBACxBL,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,qD","sources":["components/Loader.jsx","components/MoviesList.jsx","page/Home.jsx","service/getService.js"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{from: location}}>\n          <li>{title}</li>\n        </Link>\n      ))}\n    </ul>\n  )\n}\n\nMoviesList.propType = {\n  movies: PropTypes.arrayOf(PropTypes.string),\n};\n","import { useEffect, useState } from 'react';\n\nimport { getMovies } from '../service/getService';\nimport { MoviesList } from '../components/MoviesList';\nimport { Loader } from '../components/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const data = await getMovies();\n      setMovies(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops... Somesing went wrong...</p>}\n      <h1>Trending today</h1>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '5710a8f06496583a27b9e808ee84dcbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY = '/trending/movie/day';\nconst LANGUAGE = 'en-US';\nconst SEARCH_QUERY = '/search/movie';\nconst ADULT = 'false';\nconst BY_ID = '/movie';\nconst CAST = '/credits'\nconst REVIEWS = '/reviews'\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_DAY}?api_key=${API_KEY}&page=1&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY}?query=${query}&api_key=${API_KEY}&page=${page}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesById = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByCast = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${CAST}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByRewiews = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${REVIEWS}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};"],"names":["Loader","height","width","radius","color","ariaLabel","MoviesList","movies","location","useLocation","map","id","title","to","state","from","propType","PropTypes","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchData","getMovies","data","message","length","API_KEY","BASE_URL","LANGUAGE","SEARCH_QUERY","ADULT","BY_ID","axios","results","getMoviesByQuery","query","page","getMoviesById","getMoviesByCast","getMoviesByRewiews"],"sourceRoot":""}