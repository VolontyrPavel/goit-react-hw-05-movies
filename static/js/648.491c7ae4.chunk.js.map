{"version":3,"file":"static/js/648.491c7ae4.chunk.js","mappings":"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","sources":["components/MovieDetailsItem.jsx","page/MovieDetails.jsx","service/getService.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const MovieDetailsItem = ({\n  img,\n  title,\n  release,\n  vote,\n  overview,\n  genres,\n}) => {\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  return (\n    <div>\n      <img\n        src={img ? `https://image.tmdb.org/t/p/w500${img}` : defaultImg}\n        width={250}\n        alt={title}\n      />\n      <h2>\n        {title} ({release})\n      </h2>\n      <p>User Scores: {vote}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h4>Genres</h4>\n      {genres && genres.map(({ name, id }) => <p key={id}>{name}</p>)}\n    </div>\n  );\n};\n\nMovieDetailsItem.propType = {\n  img: PropTypes.string,\n  title: PropTypes.string,\n  release: PropTypes.string,\n  vote: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.string,\n};\n","import { Suspense, useEffect, useState, useCallback } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { MovieDetailsItem } from '../components/MovieDetailsItem';\n\nimport { getMoviesById } from '../service/getService';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const fetchData = useCallback(async () => {\n    try {\n      const data = await getMoviesById(movieId);\n      setMovie(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData();\n  }, [fetchData]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  console.log('2', location);\n\n  const goBackLink = () => {\n    navigate(location.state || '/');\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={goBackLink}>\n        {'<-'}Go back\n      </button>\n      <MovieDetailsItem\n        key={movie.id}\n        img={movie.poster_path}\n        title={movie.title}\n        release={movie.release_date}\n        vote={movie.vote_average}\n        overview={movie.overview}\n        genres={movie.genres}\n      />\n      <h4>Additional information</h4>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '5710a8f06496583a27b9e808ee84dcbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY = '/trending/movie/day';\nconst LANGUAGE = 'en-US';\nconst SEARCH_QUERY = '/search/movie';\nconst ADULT = 'false';\nconst BY_ID = '/movie';\nconst CAST = '/credits'\nconst REVIEWS = '/reviews'\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_DAY}?api_key=${API_KEY}&page=1&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY}?query=${query}&api_key=${API_KEY}&page=${page}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesById = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByCast = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${CAST}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByRewiews = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${REVIEWS}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};"],"names":["MovieDetailsItem","img","title","release","vote","overview","genres","src","width","alt","map","name","id","propType","PropTypes","useState","movie","setMovie","setIsLoading","setError","movieId","useParams","fetchData","useCallback","getMoviesById","data","message","useEffect","navigate","useNavigate","location","useLocation","console","log","type","onClick","state","poster_path","release_date","vote_average","to","Suspense","API_KEY","BASE_URL","LANGUAGE","SEARCH_QUERY","ADULT","BY_ID","getMovies","axios","results","getMoviesByQuery","query","page","getMoviesByCast","getMoviesByRewiews"],"sourceRoot":""}