{"version":3,"file":"static/js/311.d363cad1.chunk.js","mappings":"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","sources":["components/Loader.jsx","components/MoviesList.jsx","components/MovieSearchForm.jsx","page/Movies.jsx","service/getService.js"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Link key={id} to={`/movies/${id}`} state={{from: location}}>\n          <li>{title}</li>\n        </Link>\n      ))}\n    </ul>\n  )\n}\n\nMoviesList.propType = {\n  movies: PropTypes.arrayOf(PropTypes.string),\n};\n","import PropTypes from 'prop-types';\n\nexport const MovieSearchForm = ({\n  fetchSearchData,\n  setSearchParams,\n  searchValue,\n}) => {\n  const onHandleInput = ({ target: { value } }) => {\n    setSearchParams({ query: value });\n  };\n\n  const onHundleSubmit = e => {\n    e.preventDefault();\n    fetchSearchData(searchValue);\n  };\n\n  return (\n    <form onSubmit={onHundleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        onChange={onHandleInput}\n        value={searchValue||''}\n      ></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nMovieSearchForm.propType = {\n  fetchSearchData: PropTypes.func.isRequired,\n  setSearchParams: PropTypes.object.isRequired,\n  searchValue: PropTypes.string,\n};\n\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { MovieSearchForm } from '../components/MovieSearchForm';\nimport { MoviesList } from '../components/MoviesList';\nimport { Loader } from '../components/Loader';\nimport { getMoviesByQuery } from '../service/getService';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const searchValue = searchParams.get('query');\n\n  useEffect(() => {\n    !searchValue && setSearchParams({});\n  }, [searchValue, setSearchParams]);\n\n  const fetchSearchData = async searchParams => {\n    setIsLoading(true);\n    try {\n      const data = await getMoviesByQuery(searchParams);\n      setMovies(data);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n      setSearchParams({ query: '' });\n    }\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops... Somesing went wrong...</p>}\n      <MovieSearchForm\n        fetchSearchData={fetchSearchData}\n        setSearchParams={setSearchParams}\n        searchValue={searchValue}\n      />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '5710a8f06496583a27b9e808ee84dcbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_DAY = '/trending/movie/day';\nconst LANGUAGE = 'en-US';\nconst SEARCH_QUERY = '/search/movie';\nconst ADULT = 'false';\nconst BY_ID = '/movie';\nconst CAST = '/credits'\nconst REVIEWS = '/reviews'\n\nexport const getMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_DAY}?api_key=${API_KEY}&page=1&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${SEARCH_QUERY}?query=${query}&api_key=${API_KEY}&page=${page}&include_adult=${ADULT}&language=${LANGUAGE}`\n  );\n  return data.results;\n};\n\nexport const getMoviesById = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByCast = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${CAST}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};\n\nexport const getMoviesByRewiews = async (id) => {\n  const { data } = await axios.get(\n    `${BASE_URL}${BY_ID}/${id}${REVIEWS}?api_key=${API_KEY}&language=${LANGUAGE}`\n  );\n  return data;\n};"],"names":["Loader","height","width","radius","color","ariaLabel","MoviesList","movies","location","useLocation","map","id","title","to","state","from","propType","PropTypes","MovieSearchForm","fetchSearchData","setSearchParams","searchValue","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","value","target","query","useSearchParams","searchParams","useState","setMovies","isLoading","setIsLoading","error","setError","get","useEffect","getMoviesByQuery","data","message","length","API_KEY","BASE_URL","LANGUAGE","SEARCH_QUERY","ADULT","BY_ID","getMovies","axios","results","page","getMoviesById","getMoviesByCast","getMoviesByRewiews"],"sourceRoot":""}